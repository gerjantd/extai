'use strict';

var zod = require('zod');

var Ut=Object.defineProperty;var xe=Object.getOwnPropertySymbols;var $t=Object.prototype.hasOwnProperty,Bt=Object.prototype.propertyIsEnumerable;var Ft=(a,t)=>(t=Symbol[a])?t:Symbol.for("Symbol."+a);var we=(a,t,o)=>t in a?Ut(a,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[t]=o,T=(a,t)=>{for(var o in t||(t={}))$t.call(t,o)&&we(a,o,t[o]);if(xe)for(var o of xe(t))Bt.call(t,o)&&we(a,o,t[o]);return a};var R=(a,t,o)=>new Promise((n,s)=>{var r=c=>{try{l(o.next(c));}catch(h){s(h);}},d=c=>{try{l(o.throw(c));}catch(h){s(h);}},l=c=>c.done?n(c.value):Promise.resolve(c.value).then(r,d);l((o=o.apply(a,t)).next());}),zt=function(a,t){this[0]=a,this[1]=t;},Ae=(a,t,o)=>{var n=(d,l,c,h)=>{try{var u=o[d](l),f=(l=u.value)instanceof zt,y=u.done;Promise.resolve(f?l[0]:l).then(S=>f?n(d==="return"?d:"next",l[1]?{done:S.done,value:S.value}:S,c,h):c({value:S,done:y})).catch(S=>n("throw",S,c,h));}catch(S){h(S);}},s=d=>r[d]=l=>new Promise((c,h)=>n(d,l,c,h)),r={};return o=o.apply(a,t),r[Ft("asyncIterator")]=()=>r,s("next"),s("throw"),s("return"),r};var Dt=a=>{let t=new WeakSet;return JSON.stringify(a,(o,n)=>{if(typeof n=="object"&&n!==null){if(t.has(n))return;t.add(n);}return n})},Kt=a=>a==null?"unknown error":typeof a=="string"?a:a instanceof Error?a.message:Dt(a),G="GatewayBaseError",w=class Oe extends Error{constructor({info:t,cause:o},n){super(`[${n!=null?n:G}]: ${t}
Message: ${Kt(o)}`),this.name=G,this.info=t,this.cause=o,this.name=n!=null?n:G,Object.setPrototypeOf(this,new.target.prototype);}static isGatewayBaseError(t){return t instanceof Oe}toJSON(){return {name:this.name,info:this.info,cause:this.cause,message:this.message,stack:this.stack}}},k="system",O="user",I="assistant",N="tool",Ht=[k,O,I,N],V=zod.z.enum(Ht),Gt=[I],Vt=zod.z.enum(Gt),Ne="image",Yt="base64",Wt=["png","jpeg","webp","gif"],Jt=zod.z.object({type:zod.z.literal(Yt),base64:zod.z.string(),media_type:zod.z.enum(Wt)}),Zt="url",Qt=zod.z.object({type:zod.z.literal(Zt),url:zod.z.string()}),Xt=zod.z.discriminatedUnion("type",[Jt,Qt]),eo=["low","medium","high","auto"],to=zod.z.enum(eo),oo=(a=zod.z.undefined())=>zod.z.object({modality:zod.z.literal(Ne),detail:to,value:Xt,metadata:a}),b="text",Le=(a=zod.z.undefined())=>zod.z.object({modality:zod.z.literal(b),value:zod.z.string(),metadata:a}),Y="partial-text",Ue=(a=zod.z.undefined())=>zod.z.object({modality:zod.z.literal(Y),value:zod.z.string(),metadata:a}),M="tool-call",$e=(a=zod.z.undefined())=>zod.z.object({modality:zod.z.literal(M),index:zod.z.number().int().nonnegative(),id:zod.z.string().min(1),name:zod.z.string().min(1),arguments:zod.z.string(),metadata:a}),W="partial-tool-call",Be=(a=zod.z.undefined())=>zod.z.object({modality:zod.z.literal(W),index:zod.z.number().int().nonnegative(),id:zod.z.string().optional(),name:zod.z.string().optional(),arguments:zod.z.string().optional(),metadata:a}),_="tool-response",no=(a=zod.z.undefined())=>zod.z.object({modality:zod.z.literal(_),index:zod.z.number().int().nonnegative(),id:zod.z.string().min(1),name:zod.z.string().min(1),data:zod.z.string(),metadata:a}),ao=[b,Ne,M,_],Fe=zod.z.enum(ao),so=(a=zod.z.undefined(),t=zod.z.undefined(),o=zod.z.undefined(),n=zod.z.undefined())=>zod.z.discriminatedUnion("modality",[Le(a),oo(t),$e(o),no(n)]),ro=[Y,W];zod.z.enum(ro);var io=(a=zod.z.undefined(),t=zod.z.undefined())=>zod.z.discriminatedUnion("modality",[Ue(a),Be(t)]);var J=(a=V,t=zod.z.undefined(),o=zod.z.undefined(),n=zod.z.undefined(),s=zod.z.undefined(),r=zod.z.undefined())=>zod.z.object({role:a,content:zod.z.array(so(t,o,n,s)),metadata:r}),Z=(a=Vt,t=zod.z.undefined(),o=zod.z.undefined(),n=zod.z.undefined())=>zod.z.object({role:a,partialContent:io(t,o),metadata:n}),ze=a=>Le().parse({modality:b,value:a}),De=(a,t,o,n)=>$e().parse({modality:M,index:a,id:t,name:o,arguments:n});var Ke=(a,t)=>Z().parse({role:a,partialContent:Ue().parse({modality:Y,value:t})}),He=(a,t,o,n,s)=>Z().parse({role:a,partialContent:Be().parse({modality:W,index:t,id:o,name:n,arguments:s})});var B=(a=zod.z.record(zod.z.string(),zod.z.any()).optional())=>a,lo=["object","array","number","string","boolean","enum"],je=zod.z.enum(lo),mo=zod.z.object({anyOf:zod.z.array(zod.z.any()).optional(),type:zod.z.union([je,zod.z.array(zod.z.union([je,zod.z.literal("null")]))]).optional(),default:zod.z.any().optional(),title:zod.z.string().optional(),description:zod.z.string().max(4096).optional(),properties:zod.z.record(zod.z.any()).optional(),required:zod.z.array(zod.z.string()).optional(),minItems:zod.z.number().int().min(0).optional(),maxItems:zod.z.number().int().optional(),items:zod.z.record(zod.z.any()).optional(),enum:zod.z.array(zod.z.union([zod.z.string(),zod.z.number(),zod.z.boolean(),zod.z.null()])).optional(),minimum:zod.z.number().optional(),maximum:zod.z.number().optional(),minLength:zod.z.number().int().min(0).optional(),maxLength:zod.z.number().int().optional(),$ref:zod.z.string().optional()}),po=zod.z.object({type:zod.z.enum(["object"]),required:zod.z.array(zod.z.string()),$defs:zod.z.record(zod.z.any()).optional(),properties:zod.z.record(mo),additionalProperties:zod.z.literal(!1)}),Ge=zod.z.object({name:zod.z.string().regex(/^[a-zA-Z0-9_]{1,64}$/).max(64),description:zod.z.string().max(4096),strict:zod.z.boolean().optional(),schema:po}).optional(),co="function";var uo=zod.z.enum(["object","array","number","string","boolean","null"]),ho=zod.z.object({anyOf:zod.z.array(zod.z.any()).optional(),type:uo.optional(),default:zod.z.any().optional(),title:zod.z.string().optional(),description:zod.z.string().max(4096).optional(),properties:zod.z.record(zod.z.any()).optional(),required:zod.z.array(zod.z.string()).optional(),minItems:zod.z.number().int().min(0).optional(),maxItems:zod.z.number().int().optional(),items:zod.z.record(zod.z.any()).optional(),enum:zod.z.array(zod.z.union([zod.z.string(),zod.z.number(),zod.z.boolean(),zod.z.null()])).optional(),minimum:zod.z.number().optional(),maximum:zod.z.number().optional(),minLength:zod.z.number().int().min(0).optional(),maxLength:zod.z.number().int().optional()});zod.z.object({type:zod.z.enum(["object"]),title:zod.z.string().optional(),$defs:zod.z.record(zod.z.any()).optional(),properties:zod.z.record(ho).optional(),required:zod.z.array(zod.z.string()).optional()});var go=zod.z.object({name:zod.z.string().regex(/^[a-zA-Z0-9_]{1,64}$/).max(64),description:zod.z.string().max(4096),parameters:zod.z.any(),strict:zod.z.boolean().optional()});var fo=zod.z.enum(["function"]),yo=zod.z.object({type:fo,definition:zod.z.object({schema:go})}),To=[co];zod.z.enum(To);var Ve=(a=zod.z.undefined())=>zod.z.discriminatedUnion("type",[yo.extend({metadata:a})]),x="text",Ye="token",bo=[x,Ye],We=zod.z.enum(bo),Co=zod.z.array(zod.z.string().min(1)),Eo=zod.z.array(zod.z.array(zod.z.number().int().nonnegative())),Je=(a=zod.z.undefined())=>zod.z.discriminatedUnion("modality",[zod.z.object({modality:zod.z.literal(x),metadata:a,requests:Co}),zod.z.object({modality:zod.z.literal(Ye),metadata:a,requests:Eo})]),Q="float",Ro=zod.z.object({index:zod.z.number().int().nonnegative(),embedding:zod.z.array(zod.z.number())}),Mo="base64",Io=zod.z.object({index:zod.z.number().int().nonnegative(),embedding:zod.z.string().base64()}),qe=zod.z.object({totalTokens:zod.z.number().int().nonnegative()});zod.z.discriminatedUnion("encodingFormat",[zod.z.object({encodingFormat:zod.z.literal(Q),embeddings:zod.z.array(Ro),usage:qe.optional()}),zod.z.object({encodingFormat:zod.z.literal(Mo),embeddings:zod.z.array(Io),usage:qe.optional()})]);var Ze=zod.z.object({promptTokens:zod.z.number().nonnegative(),completionTokens:zod.z.number().nonnegative(),totalTokens:zod.z.number().nonnegative()}),ke=zod.z.object({token:zod.z.string(),logProb:zod.z.number(),bytes:zod.z.array(zod.z.number().int()).nullable()}),vo=ke.extend({topLogProbs:zod.z.array(ke)}),Qe=zod.z.array(vo);zod.z.object({messages:zod.z.array(J()),usage:Ze.optional(),logProbs:Qe.optional()});zod.z.object({partialMessages:zod.z.array(Z()),usage:Ze.optional(),logProbs:Qe.optional()});var Po=Object.defineProperty,Xe=Object.getOwnPropertySymbols,So=Object.prototype.hasOwnProperty,_o=Object.prototype.propertyIsEnumerable,et=(a,t,o)=>t in a?Po(a,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[t]=o,U=(a,t)=>{for(var o in t||(t={}))So.call(t,o)&&et(a,o,t[o]);if(Xe)for(var o of Xe(t))_o.call(t,o)&&et(a,o,t[o]);return a};var tt="ModelResponseError",A=class it extends w{constructor({info:t,cause:o}){super({info:t,cause:o},tt),this.name=tt,this.cause=o,this.info=t;}static isModelResponseError(t){return t instanceof it}},ot="InvalidModelRequestError",L=class lt extends w{constructor({info:t,cause:o}){super({info:t,cause:o},ot),this.name=ot,this.cause=o,this.info=t,Object.setPrototypeOf(this,new.target.prototype);}static isInvalidModelRequestError(t){return t instanceof lt}},nt="InvalidConfigError",v=class mt extends w{constructor({info:t,cause:o}){super({info:t,cause:o},nt),this.name=nt,this.cause=o,this.info=t,Object.setPrototypeOf(this,new.target.prototype);}static isInvalidConfigError(t){return t instanceof mt}},at="InvalidMessagesError",E=class dt extends w{constructor({info:t,cause:o}){super({info:t,cause:o},at),this.name=at,this.cause=o,this.info=t,Object.setPrototypeOf(this,new.target.prototype);}static isInvalidMessagesError(t){return t instanceof dt}},st="InvalidToolsError",X=class pt extends w{constructor({info:t,cause:o}){super({info:t,cause:o},st),this.name=st,this.cause=o,this.info=t,Object.setPrototypeOf(this,new.target.prototype);}static isInvalidToolsError(t){return t instanceof pt}},rt="InvalidEmbeddingRequestsError",ee=class ct extends w{constructor({info:t,cause:o}){super({info:t,cause:o},rt),this.name=rt,this.info=t,this.cause=o,Object.setPrototypeOf(this,new.target.prototype);}static isInvalidEmbeddingRequestsError(t){return t instanceof ct}},te="multi-string",ut=zod.z.object({type:zod.z.literal(te),param:zod.z.string().min(1),title:zod.z.string().min(1),description:zod.z.string().min(1).max(500),max:zod.z.number().int().positive()}),xo=a=>zod.z.array(zod.z.string()).max(a).default([]).optional(),ht=a=>({def:ut.parse(U({type:te},a)),schema:xo(a.max)}),oe="object-schema",gt=zod.z.object({type:zod.z.literal(oe),param:zod.z.string().min(1),title:zod.z.string().min(1),description:zod.z.string().min(1).max(500),objectSchema:zod.z.any()}),wo=a=>a.optional(),ft=a=>({def:gt.parse(U({type:oe},a)),schema:wo(a.objectSchema)}),ne="range",yt=zod.z.object({type:zod.z.literal(ne),param:zod.z.string().min(1),title:zod.z.string().min(1),description:zod.z.string().min(1).max(500),min:zod.z.number().int(),max:zod.z.number().int(),step:zod.z.number().positive(),default:zod.z.number()}),Ao=(a,t,o,n)=>zod.z.number().min(a).max(t).step(o).default(n).optional(),P=a=>({def:yt.parse(U({type:ne},a)),schema:Ao(a.min,a.max,a.step,a.default)}),ae="select-boolean",Tt=zod.z.object({type:zod.z.literal(ae),param:zod.z.string().min(1),title:zod.z.string().min(1),description:zod.z.string().min(1).max(500),default:zod.z.boolean().nullable()}),jo=a=>zod.z.boolean().nullable().default(a).optional(),bt=a=>({def:Tt.parse(U({type:ae},a)),schema:jo(a.default)}),se="select-string",Ct=zod.z.object({type:zod.z.literal(se),param:zod.z.string().min(1),title:zod.z.string().min(1),description:zod.z.string().min(1).max(500),default:zod.z.string().min(1).nullable(),choices:zod.z.array(zod.z.string().min(1))}),qo=(a,t)=>zod.z.enum(t).nullable().default(a).optional(),re=a=>({def:Ct.parse(U({type:se},a)),schema:qo(a.default,a.choices)}),ko=[ne,te,se,oe,ae];zod.z.enum(ko);var Et=zod.z.discriminatedUnion("type",[yt,ut,Ct,Tt,gt]),Rt=(a=V,t=Fe)=>zod.z.object({name:zod.z.string().min(1),description:zod.z.string().min(1),roles:zod.z.record(a,zod.z.string().min(1).optional()),modalities:zod.z.array(t).nonempty(),maxInputTokens:zod.z.number().int().positive().min(1),maxOutputTokens:zod.z.number().int().positive().min(1),config:zod.z.object({def:zod.z.record(zod.z.string().min(1),Et),schema:zod.z.instanceof(zod.z.ZodObject)}).refine(o=>{var n,s;let r=Object.keys(o.def),d=Object.keys((s=(n=o.schema)==null?void 0:n.shape)!=null?s:{});return r.every(l=>d.includes(l))&&d.every(l=>r.includes(l))},{message:"Keys in 'config.def' must exactly match keys in 'config.schema'"})}),Mt=(a=We)=>zod.z.object({name:zod.z.string().min(1),description:zod.z.string().min(1),modalities:zod.z.array(a).nonempty(),maxInputTokens:zod.z.number().int().positive().min(1),maxOutputTokens:zod.z.number().int().positive().min(1),config:zod.z.object({def:zod.z.record(zod.z.string().min(1),Et),schema:zod.z.instanceof(zod.z.ZodObject)}).refine(t=>{var o,n;let s=Object.keys(t.def),r=Object.keys((n=(o=t.schema)==null?void 0:o.shape)!=null?n:{});return s.every(d=>r.includes(d))&&r.every(d=>s.includes(d))},{message:"Keys in 'config.def' must exactly match keys in 'config.schema'"})});zod.z.record(zod.z.string());zod.z.record(zod.z.union([zod.z.boolean(),zod.z.string(),zod.z.number(),zod.z.object({}),zod.z.array(zod.z.any()),zod.z.null(),zod.z.undefined()]));zod.z.string().url();var Oo={type:"range",title:"Temperature",description:"Adjusts the model's creativity level. With a setting of 0, the model strictly picks the most probable next word.     For endeavors that benefit from a dash of inventiveness, consider dialing it up to 0.7 or higher, enabling the model to produce text     that's unexpectedly fresh."},No={type:"range",title:"Max tokens",description:"Specify the total tokens for generation, where one token approximates four English characters.     Setting this to 0 defaults to the model's maximum capacity."},Lo=a=>({type:"multi",title:"Stop sequence",description:`Enter up to ${a} sequences that will halt additional text output.       The generated text will exclude these sequences.`}),Uo={type:"range",title:"Top A",description:"Considers only the top tokens that have 'sufficiently high' probabilities relative to the most likely token,     functioning like a dynamic Top-P.     A lower Top-A value narrows down the token choices based on the highest probability token,     while a higher Top-A value refines the filtering without necessarily impacting the creativity of the output."},$o={type:"range",title:"Top P",description:"Selects a subset of likely tokens for generation, restricting choices to the top-P fraction of possibilities,     such as the top 10% when P=0.1.     This approach can limit the variety of the output. By default, it's set to 1, indicating no restriction.     It's advised to adjust this parameter or temperature to modulate output diversity, but not to modify both simultaneously."},Bo={type:"range",title:"Top K",description:"Select only from the highest K probabilities for each following word, effectively eliminating the less likely 'long tail' options."},Fo={type:"range",title:"Min P",description:"Specifies the minimum probability a token must have to be considered, in relation to the probability of the most likely token.     (This value varies based on the confidence level of the top token.)     For example, if Min-P is set to 0.1, only tokens with at least 1/10th the probability of the highest-ranked token will be considered."},zo={type:"range",title:"Frequency penalty",description:"Minimize redundancy.    By assigning a penalty to frequently used tokens within the text, the likelihood of repeating identical phrases is reduced.     The default setting for this penalty is zero."},Do={type:"range",title:"Presence penalty",description:"Enhance the introduction of novel subjects by reducing the preference for tokens that have already appeared in the text,     thus boosting the chances of exploring fresh topics.     The standard setting for this is zero."},Ko={type:"range",title:"Seed",description:"When seed is fixed to a specific value, the model makes a best effort to provide the same response for repeated requests.     Deterministic output isn't guaranteed.     Also, changing the model or parameter settings, such as the temperature,     can cause variations in the response even when you use the same seed value.     By default, a random seed value is used."},Ho={type:"range",title:"Repetition penalty",description:"Reduces the likelihood of repeating tokens from the input.     Increasing this value makes the model less prone to repetition, but setting it too high may lead to less coherent output,     often resulting in run-on sentences missing smaller words.     The token penalty is scaled according to the original token's probability."},Go={type:"boolean",title:"Log probs",description:"Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned."},Vo={type:"range",title:"Top log probs",description:"The number of most likely tokens to return at each token position, each with an associated log probability.     'logprobs' must be set to true if this parameter is used."},Yo={type:"boolean",title:"Echo",description:"If true, the response will contain the prompt."},Wo={type:"select",title:"Response format",description:"Choose the response format of your model. For JSON, you must include the string 'JSON' in some form within your system / user prompt."},Jo={type:"select",title:"Response format",description:"Choose the response format of your model. 'json_object' colloquially known as JSON mode, instructs the model to respond with a valid   JSON (must include the term 'json' in prompt). 'json_schema' colloquially known as structured outputs, allows you to specify a strict   response schema that the model will adhere to."},Zo={type:"object",title:"Response schema",description:"When response format is set to 'json_schema', the model will return a JSON object of the specified schema."},g={TEMPERATURE:Oo,MAX_TOKENS:No,STOP:Lo,TOP_A:Uo,TOP_P:$o,TOP_K:Bo,MIN_P:Fo,FREQUENCY_PENALTY:zo,PRESENCE_PENALTY:Do,REPETITION_PENALTY:Ho,SEED:Ko,LOG_PROBS:Go,TOP_LOG_PROBS:Vo,ECHO:Yo,RESPONSE_FORMAT:Wo,RESPONSE_FORMAT_WITH_SCHEMA:Jo,RESPONSE_SCHEMA:Zo};var F=a=>Object.fromEntries(Object.entries(a).filter(([t,o])=>o!=null));var j=a=>a==null?void 0:a.replace(/\/$/,"");var ie=P({param:"temperature",title:g.TEMPERATURE.title,description:g.TEMPERATURE.description,min:0,max:1,step:.01,default:1}),le=a=>P({param:"max_tokens",title:g.MAX_TOKENS.title,description:g.MAX_TOKENS.description,min:0,max:a,step:1,default:0}),me=a=>ht({param:"stop",title:g.STOP(a).title,description:g.STOP(a).description,max:a}),de=P({param:"top_k",title:g.TOP_K.title,description:g.TOP_K.description,min:0,max:1e4,step:1,default:0}),pe=P({param:"top_p",title:g.TOP_P.title,description:g.TOP_P.description,min:0,max:1,step:.01,default:1}),ce=P({param:"min_p",title:g.MIN_P.title,description:g.MIN_P.description,min:0,max:1,step:.01,default:0}),ue=P({param:"frequency_penalty",title:g.FREQUENCY_PENALTY.title,description:g.FREQUENCY_PENALTY.description,min:-2,max:2,step:.01,default:0}),he=P({param:"presence_penalty",title:g.PRESENCE_PENALTY.title,description:g.PRESENCE_PENALTY.description,min:-2,max:2,step:.01,default:0}),ge=P({param:"repetition_penalty",title:g.REPETITION_PENALTY.title,description:g.REPETITION_PENALTY.description,min:0,max:1e4,step:.01,default:0}),fe=P({param:"seed",title:g.SEED.title,description:g.SEED.description,min:0,max:1e6,step:1,default:0}),ye=bt({param:"logprobs",title:g.LOG_PROBS.title,description:g.LOG_PROBS.description,default:!1}),Te=re({param:"tool_choice",title:"Tool choice",description:"Controls which (if any) tool is called by the model.     'none' means the model will not call a function.     'auto' means the model can pick between generating a message or calling a tool.",default:"auto",choices:["auto","required","none"]}),be=re({param:"response_format",title:g.RESPONSE_FORMAT.title,description:g.RESPONSE_FORMAT.description,default:"text",choices:["text","json_object"]}),Ce=ft({param:"response_schema",title:g.RESPONSE_SCHEMA.title,description:g.RESPONSE_SCHEMA.description,objectSchema:Ge});var It=(a,t)=>zod.z.object({temperature:ie.schema,maxTokens:le(a).schema,stop:me(t).schema,topP:pe.schema,topK:de.schema,minP:ce.schema,frequencyPenalty:ue.schema,presencePenalty:he.schema,repetitionPenalty:ge.schema,seed:fe.schema.transform(o=>o===0?void 0:o),logProbs:ye.schema,toolChoice:Te.schema,responseSchema:Ce.schema,responseFormat:be.schema}),vt=(a,t)=>({temperature:ie.def,maxTokens:le(a).def,stop:me(t).def,topP:pe.def,topK:de.def,minP:ce.def,frequencyPenalty:ue.def,presencePenalty:he.def,repetitionPenalty:ge.def,seed:fe.def,logProbs:ye.def,toolChoice:Te.def,responseSchema:Ce.def,responseFormat:be.def});var Ee={base:(a,t)=>({def:vt(a,t),schema:It(a,t)})};var Pt=zod.z.enum([k,O,I,N]),St={system:k,user:O,assistant:I,tool:N};var _t=[b,M,_],xt=zod.z.enum([b,M,_]);var tn=zod.z.object({token_ids:zod.z.array(zod.z.number()),tokens:zod.z.array(zod.z.string()),token_logprobs:zod.z.array(zod.z.number())}),on=zod.z.array(zod.z.object({id:zod.z.string().min(1),type:zod.z.enum(["function"]),function:zod.z.object({name:zod.z.string(),arguments:zod.z.string()})})),wt=zod.z.object({id:zod.z.string(),object:zod.z.literal("chat.completion"),created:zod.z.number(),model:zod.z.string(),prompt:zod.z.any(),choices:zod.z.array(zod.z.object({index:zod.z.number(),message:zod.z.object({role:zod.z.string(),content:zod.z.string().nullable().optional(),tool_calls:on.optional()}),logprobs:tn.nullable().optional(),seed:zod.z.number().nullable().optional(),finish_reason:zod.z.string()})),usage:zod.z.object({prompt_tokens:zod.z.number(),completion_tokens:zod.z.number(),total_tokens:zod.z.number()}).nullable().optional()}),nn=zod.z.array(zod.z.object({index:zod.z.number().int(),id:zod.z.string().min(1).optional(),type:zod.z.enum(["function"]).optional(),function:zod.z.object({name:zod.z.string().min(1).optional(),arguments:zod.z.string().optional()}).optional()})),At=zod.z.object({id:zod.z.string(),object:zod.z.string(),created:zod.z.number(),model:zod.z.string(),choices:zod.z.array(zod.z.object({index:zod.z.number(),delta:zod.z.object({token_id:zod.z.number().nullable().optional(),role:zod.z.string().nullable().optional(),content:zod.z.string().nullable().optional(),tool_calls:nn.optional()}).or(zod.z.object({})),logprobs:zod.z.any().nullable().optional(),seed:zod.z.number().nullable().optional(),finish_reason:zod.z.string().nullable(),text:zod.z.string().nullable().optional()})),usage:zod.z.object({prompt_tokens:zod.z.number(),completion_tokens:zod.z.number(),total_tokens:zod.z.number()}).nullable().optional()});var an=zod.z.object({type:zod.z.literal("function"),function:zod.z.object({name:zod.z.string().min(1),description:zod.z.string().min(1).optional(),strict:zod.z.boolean().optional(),parameters:zod.z.any()})}),sn=zod.z.enum(["none","auto","required"]),rn=zod.z.object({type:zod.z.literal("function"),function:zod.z.object({name:zod.z.string().min(1)})}),ln=zod.z.object({type:zod.z.enum(["text","json_object"])}).or(zod.z.object({type:zod.z.literal("json_schema"),json_schema:zod.z.object({name:zod.z.string().min(1),description:zod.z.string().min(1).optional(),strict:zod.z.boolean().optional(),schema:zod.z.any()})})),Re=zod.z.string(),mn=zod.z.object({id:zod.z.string().min(1),type:zod.z.literal("function"),function:zod.z.object({name:zod.z.string().min(1),arguments:zod.z.string().min(1)})}),dn=zod.z.object({role:zod.z.literal("system"),content:Re}),pn=zod.z.object({role:zod.z.literal("user"),content:Re}),cn=zod.z.object({role:zod.z.literal("assistant"),content:Re.optional(),tool_calls:zod.z.array(mn).min(1).optional()}),un=zod.z.object({role:zod.z.literal("tool"),tool_call_id:zod.z.string().min(1),content:zod.z.string().min(1)}),hn=zod.z.union([dn,pn,cn,un]),jt=zod.z.object({model:zod.z.string().min(1).optional(),messages:zod.z.array(hn).min(1),frequency_penalty:zod.z.number().min(-2).max(2).nullable().optional(),logprobs:zod.z.number().min(0).max(1).nullable().optional(),max_tokens:zod.z.number().min(0).nullable().optional(),presence_penalty:zod.z.number().min(-2).max(2).nullable().optional(),repetition_penalty:zod.z.number().min(0).max(2).nullable().optional(),response_format:ln.optional(),seed:zod.z.number().optional(),stop:zod.z.string().or(zod.z.array(zod.z.string()).max(4)).nullable().optional(),temperature:zod.z.number().min(0).max(1).nullable().optional(),top_p:zod.z.number().min(0).max(1).nullable().optional(),top_k:zod.z.number().min(0).max(1e4).nullable().optional(),min_p:zod.z.number().min(0).max(1).nullable().optional(),echo:zod.z.boolean().nullable().optional(),tools:zod.z.array(an).optional(),tool_choice:sn.or(rn).optional()});var Me=Rt(Pt,xt).parse({name:"__base__",description:"Base chat model for Together AI",maxInputTokens:128e3,maxOutputTokens:128e3,roles:St,modalities:_t,config:{def:Ee.base(128e3,4).def,schema:Ee.base(128e3,4).schema}});var gn="together-ai",q=class{constructor(){this.version="v1";this.name=gn;}chatModelLiterals(){return ["__base__"]}chatModelSchemas(){return {__base__:Me}}chatModel(t){let o=z,n=ve.parse(t);return new o(Me,n)}embeddingModelLiterals(){return ["__base__"]}embeddingModelSchemas(){return {__base__:Ie}}embeddingModel(t){let o=D,n=Pe.parse(t);return new o(Ie,n)}};q.baseUrl="https://api.together.xyz/v1";var ve=zod.z.object({modelName:zod.z.string(),apiKey:zod.z.string()}),z=class{constructor(t,o){this.version="v1";let n=ve.parse(o);this.modelSchema=t,this.modelName=n.modelName,this.apiKey=n.apiKey,this.baseUrl=j(q.baseUrl),this.streamChatUrl=j(`${this.baseUrl}/chat/completions`),this.completeChatUrl=j(`${this.baseUrl}/chat/completions`);}getDefaultBaseUrl(){return this.baseUrl}getDefaultHeaders(){return {Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"}}getDefaultParams(){return {model:this.modelName}}getRetryDelay(t){return {shouldRetry:!0,delayMs:0}}getTokenCount(t){return t.reduce((o,n)=>o+n.content.map(s=>s.modality==="text"?s.value:"").join(" ").length,0)}transformModelRequest(t){let o=jt.safeParse(t);if(!o.success)throw new L({info:"Invalid model request",cause:o.error});let n=o.data,s=n.model;if(n.tool_choice&&(!n.tools||n.tools.length===0))throw new L({info:`Invalid model request for model : '${this.modelName}'`,cause:new Error("'tools' are required when 'tool_choice' is specified")});let r={};n.response_format&&(r.responseFormat=n.response_format.type,n.response_format.type==="json_schema"&&(r.responseSchema={name:n.response_format.json_schema.name,description:n.response_format.json_schema.description||"",strict:n.response_format.json_schema.strict,schema:n.response_format.json_schema.schema})),n.tool_choice&&(typeof n.tool_choice=="string"?r.toolChoice=n.tool_choice:r.toolChoice=n.tool_choice.function.name),r.seed=n.seed,r.maxTokens=n.max_tokens,r.temperature=n.temperature,r.topP=n.top_p,r.minP=n.min_p,r.topK=n.top_k,r.repetitionPenalty=n.repetition_penalty,r.presencePenalty=n.presence_penalty,r.frequencyPenalty=n.frequency_penalty,r.repetitionPenalty=n.repetition_penalty,r.stop=n.stop,r.logProbs=n.logprobs!==0,r.echo=n.echo;let d=B().parse(F(r)),l=[],c={};n.messages.forEach(u=>{let f=u.role;switch(f){case"system":l.push({role:f,content:[{modality:b,value:u.content}]});break;case"user":l.push({role:f,content:[{modality:b,value:u.content}]});break;case"assistant":{let y=[];if(!u.content&&!u.tool_calls)throw new L({info:`Invalid model request for model : '${this.modelName}'`,cause:new Error("one of'content' or 'tool_calls' must be provided")});u.content&&y.push({modality:b,value:u.content}),u.tool_calls&&u.tool_calls.forEach((K,Lt)=>{let H={modality:M,id:K.id,index:Lt,name:K.function.name,arguments:K.function.arguments};y.push(H),c[H.id]=H;}),l.push({role:f,content:y});}break;case"tool":{let y=u;l.push({role:f,content:[{modality:_,id:y.tool_call_id,index:c[y.tool_call_id].index,name:c[y.tool_call_id].name,data:y.content}]});}break}});let h=[];return n.tools&&n.tools.forEach(u=>{h.push({type:"function",definition:{schema:{name:u.function.name,description:u.function.description||"",strict:u.function.strict,parameters:u.function.parameters}}});}),{modelName:s,config:d,messages:l,tools:h.length>0?h:void 0}}transformConfig(t,o,n){let s=t.toolChoice;delete t.toolChoice;let r=this.modelSchema.config.schema.safeParse(t);if(!r.success)throw new v({info:`Invalid config for model : '${this.modelName}'`,cause:r.error});let d=r.data;s!==void 0&&(d.toolChoice=s),Object.keys(d).forEach(c=>{if(!(c in this.modelSchema.config.def))throw new v({info:`Invalid config for model : '${this.modelName}'`,cause:new Error(`Invalid config key : '${c}', 
            available keys : [${Object.keys(this.modelSchema.config.def).join(", ")}]`)})});let l=Object.keys(d).reduce((c,h)=>{let u=this.modelSchema.config.def[h],f=u.param,y=d[h];return f==="max_tokens"&&u.type==="range"&&y===0?c[f]=u.max:f==="logprobs"&&u.type==="select-boolean"?y===!0?c[f]=1:c[f]=0:c[f]=y,c},{});if(l.top_logprobs&&!l.logprobs)throw new v({info:`Invalid config for model : '${this.modelName}'`,cause:new Error("'logprobs' must be 'true' when 'top_logprobs' is specified")});if("tool_choice"in l&&l.tool_choice!==void 0){let c=l.tool_choice;if(!n||n&&n.length===0)throw new v({info:`Invalid config for model : '${this.modelName}'`,cause:new Error("'tools' are required when 'toolChoice' is specified")});if(n&&n.length>0){let h=this.modelSchema.config.def.toolChoice;if(!h.choices.includes(c))if(n.map(u=>u.definition.schema.name).includes(c))l.tool_choice={type:"function",function:{name:c}};else throw new v({info:`Invalid config for model : '${this.modelName}'`,cause:new Error(`toolChoice : '${c}' is not part of provided 'tools' names or 
                one of [${h.choices.join(", ")}]`)})}}if("response_format"in l&&l.response_format!==void 0){let c=l.response_format;if(c==="json_schema")if("response_schema"in l)l.response_format={type:"json_schema",json_schema:l.response_schema},delete l.response_schema;else throw new v({info:`Invalid config for model : '${this.modelName}'`,cause:new Error("'responseSchema' is required in config when 'responseFormat' is 'json_schema'")});else l.response_format={type:c};}return l}transformMessages(t){if(!t||t&&t.length===0)return {messages:[]};let o=t.map(s=>{let r=J().safeParse(s);if(!r.success)throw new E({info:"Invalid messages",cause:r.error});return r.data});return o.forEach(s=>{s.content.forEach(r=>{if(!this.modelSchema.modalities.includes(r.modality))throw new E({info:`Invalid message content for model : '${this.modelName}'`,cause:new Error(`model : '${this.modelName}' does not support modality : '${r.modality}', 
              available modalities : [${this.modelSchema.modalities.join(", ")}]`)})});}),o.forEach(s=>{if(!Object.keys(this.modelSchema.roles).includes(s.role))throw new E({info:`Invalid message content for model : '${this.modelName}'`,cause:new Error(`model : '${this.modelName}' does not support role : '${s.role}', 
            available roles : [${Object.keys(this.modelSchema.roles).join(", ")}]`)})}),{messages:o.map(s=>{switch(s.role){case k:{let r="";return s.content.forEach(d=>{if(d.modality===b)r+=d.value+`
`;else throw new E({info:`Invalid message 'role' and 'modality' combination for model : ${this.modelName}`,cause:new Error(`role : '${s.role}' cannot have content with modality : '${d.modality}'`)})}),{role:this.modelSchema.roles[s.role],content:r}}case I:{let r="",d=[];return s.content.forEach(l=>{if(l.modality===b)r+=l.value+`
`;else if(l.modality===M)d.push({id:l.id,type:"function",function:{name:l.name,arguments:l.arguments}});else throw new E({info:`Invalid message 'role' and 'modality' combination for model : ${this.modelName}`,cause:new Error(`role : '${s.role}' cannot have content with modality : '${l.modality}'`)})}),T({role:this.modelSchema.roles[s.role],content:r},d.length>0?{tool_calls:d}:{})}case O:{let r="";return s.content.forEach(d=>{if(d.modality===b)r+=d.value+`
`;else throw new E({info:`Invalid message 'role' and 'modality' combination for model : ${this.modelName}`,cause:new Error(`role : '${s.role}' cannot have content with modality : '${d.modality}'`)})}),{role:this.modelSchema.roles[s.role],content:r}}case N:{if(s.content.length!==1)throw new E({info:`Invalid message for role : '${s.role}'`,cause:new Error(`role : '${s.role}' must have exactly one content item`)});if(s.content[0].modality!==_)throw new E({info:`Invalid message 'role' and 'modality' combination for model : ${this.modelName}`,cause:new Error(`role : '${s.role}' must have content with modality : '${_}'`)});let r=s.content[0];return {role:this.modelSchema.roles[s.role],tool_call_id:r.id,content:r.data}}default:throw new E({info:`Invalid message 'role' for model : ${this.modelName}`,cause:new Error(`role : '${s.role}' is not supported, 
              available roles : [${Object.keys(this.modelSchema.roles).join(", ")}]`)})}})}}transformTools(t){if(!this.modelSchema.modalities.includes(M))throw new X({info:`Invalid tool 'modality' for model : ${this.modelName}`,cause:new Error(`model : '${this.modelName}' does not support tool modality : '${M}'`)});return !t||t&&t.length===0?{tools:[]}:{tools:t.map(s=>{let r=Ve().safeParse(s);if(!r.success)throw new X({info:"Invalid tools",cause:r.error});return r.data}).map(s=>({type:"function",function:s.definition.schema}))}}getCompleteChatUrl(t,o,n){return R(this,null,function*(){return new Promise(s=>{s(this.completeChatUrl);})})}getCompleteChatHeaders(t,o,n){return R(this,null,function*(){return new Promise(s=>{s(this.getDefaultHeaders());})})}getCompleteChatData(t,o,n){return R(this,null,function*(){let s=this.transformConfig(t,o,n),r=this.transformMessages(o);if(r.messages&&r.messages.length===0)throw new E({info:"Messages are required",cause:new Error("Messages are required")});let d=n?this.transformTools(n):{};return new Promise(l=>{l(T(T(T(T({},this.getDefaultParams()),s),r),d));})})}transformCompleteChatResponse(t){let o=wt.safeParse(t);if(o.success){if(o.data.choices.length===0)throw new A({info:"Invalid response from model",cause:new Error(`No choices in response : ${JSON.stringify(o.data)}`)});let n=o.data,s=[{role:I,content:[]}],r=n.choices[0].message;r.content&&s[0].content.push(ze(r.content)),r.tool_calls&&r.tool_calls.forEach((h,u)=>{s[0].content.push(De(u,h.id,h.function.name,h.function.arguments));});let d;n.usage&&(d={promptTokens:n.usage.prompt_tokens,completionTokens:n.usage.completion_tokens,totalTokens:n.usage.total_tokens});let l=[],c=n.choices[0].logprobs;return c&&c.tokens.forEach((h,u)=>{l.push({token:h,logProb:c.token_logprobs[u],bytes:null,topLogProbs:[]});}),{messages:s,usage:d,logProbs:l}}throw new A({info:"Invalid response from model",cause:o.error})}getStreamChatUrl(t,o,n){return R(this,null,function*(){return new Promise(s=>{s(this.streamChatUrl);})})}getStreamChatHeaders(t,o,n){return R(this,null,function*(){return new Promise(s=>{s(this.getDefaultHeaders());})})}getStreamChatData(t,o,n){return R(this,null,function*(){let s=this.transformConfig(t,o,n),r=this.transformMessages(o);if(r.messages&&r.messages.length===0)throw new E({info:"Messages are required",cause:new Error("Messages are required")});let d=n?this.transformTools(n):{};return new Promise(l=>{l(T(T(T(T({stream:!0,stream_options:{include_usage:!0}},this.getDefaultParams()),s),r),d));})})}transformStreamChatResponseChunk(t,o){return Ae(this,null,function*(){var s,r;let n=(o+t).split(`
`).filter(d=>d.trim()!=="");for(let d of n){if(d==="data: [DONE]")return;if(d.startsWith("data: {")&&d.endsWith("}")){let l;try{l=JSON.parse(d.substring(6));}catch(h){throw new A({info:`Malformed JSON received in stream : ${l}`,cause:h})}let c=At.safeParse(l);if(c.success){let h={partialMessages:[]},u=c.data;if(u.choices.length>0){let f=u.choices[0].delta;if(f!==void 0&&Object.keys(f).length!==0){if("content"in f&&f.content!==null)h.partialMessages.push(Ke(I,f.content));else if("tool_calls"in f&&f.tool_calls){let y=f.tool_calls.at(0);h.partialMessages.push(He(I,y.index,y.id,(s=y.function)==null?void 0:s.name,(r=y.function)==null?void 0:r.arguments));}}}u.usage&&(h.usage={promptTokens:u.usage.prompt_tokens,completionTokens:u.usage.completion_tokens,totalTokens:u.usage.total_tokens}),yield {partialResponse:h,buffer:o};}else throw new A({info:"Invalid response from model",cause:c.error})}}})}};var qt=[x],kt=zod.z.enum([x]);var Ot=zod.z.object({object:zod.z.literal("list"),model:zod.z.string(),data:zod.z.array(zod.z.object({index:zod.z.number(),object:zod.z.literal("embedding"),embedding:zod.z.array(zod.z.number()).or(zod.z.string().base64())})),usage:zod.z.object({prompt_tokens:zod.z.number().nonnegative(),total_tokens:zod.z.number().nonnegative()}).optional()});var yn=zod.z.string().min(1).or(zod.z.array(zod.z.string().min(1)).min(1)),Nt=zod.z.object({model:zod.z.string().min(1).optional(),input:yn});var Pe=zod.z.object({modelName:zod.z.string(),apiKey:zod.z.string()}),D=class{constructor(t,o){this.version="v1";let n=Pe.parse(o);this.modelSchema=t,this.modelName=n.modelName,this.apiKey=n.apiKey,this.baseUrl=j(q.baseUrl),this.getEmbeddingsUrl=j(`${this.baseUrl}/embeddings`);}getDefaultBaseUrl(){return this.baseUrl}getDefaultHeaders(){return {Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"}}getDefaultParams(){return {model:this.modelName}}getRetryDelay(t){return {shouldRetry:!0,delayMs:0}}getTokenCount(t){return t.requests.reduce((o,n)=>o+n.length,0)}transformModelRequest(t){let o=Nt.safeParse(t);if(!o.success)throw new L({info:"Invalid model request",cause:o.error});let n=o.data,s=n.model,r={},d=B().parse(F(r)),l={modality:x,requests:[...n.input]};return {modelName:s,config:d,embeddingRequests:l}}transformConfig(t,o){let n=this.modelSchema.config.schema.safeParse(t);if(!n.success)throw new v({info:`Invalid config for model : '${this.modelName}'`,cause:n.error});let s=n.data;return Object.keys(s).forEach(d=>{if(!this.modelSchema.config.def[d])throw new v({info:`Invalid config for model : '${this.modelName}'`,cause:new Error(`Invalid config key : '${d}', 
            available keys : [${Object.keys(this.modelSchema.config.def).join(", ")}]`)})}),Object.keys(s).reduce((d,l)=>{let h=this.modelSchema.config.def[l].param,u=s[l];return d[h]=u,d},{})}transformEmbeddingRequests(t){let o=Je().safeParse(t);if(!o.success)throw new ee({info:"Invalid embedding requests",cause:o.error});if(t.modality!==x)throw new ee({info:`Invalid embedding requests for model : '${this.modelName}'`,cause:new Error(`Only '${x}' modality is supported for model : '${this.modelName}'`)});return {input:o.data.requests}}getGetEmbeddingsUrl(t,o){return R(this,null,function*(){return new Promise(n=>{n(this.getEmbeddingsUrl);})})}getGetEmbeddingsHeaders(t,o){return R(this,null,function*(){return new Promise(n=>{n(this.getDefaultHeaders());})})}getGetEmbeddingsData(t,o){return R(this,null,function*(){return new Promise(n=>{n(T(T(T({},this.getDefaultParams()),this.transformConfig(t,o)),this.transformEmbeddingRequests(o)));})})}transformGetEmbeddingsResponse(t){var n;let o=Ot.safeParse(t);if(o.success){let s=o.data,r=s.data.map(d=>({index:d.index,embedding:d.embedding}));return {encodingFormat:Q,embeddings:r,usage:{totalTokens:(n=s.usage)==null?void 0:n.total_tokens}}}throw new A({info:"Invalid response from model",cause:o.error})}};var Ie=Mt(kt).parse({name:"__base__",description:"Base embedding model for Together AI",maxInputTokens:128e3,maxOutputTokens:128e3,modalities:qt,config:{def:{},schema:zod.z.object({})}});

exports.BaseChatModel = z;
exports.BaseChatModelOptions = ve;
exports.BaseChatModelSchema = Me;
exports.BaseEmbeddingModel = D;
exports.BaseEmbeddingModelOptions = Pe;
exports.BaseEmbeddingModelSchema = Ie;
exports.ChatModelBaseConfigDef = vt;
exports.ChatModelBaseConfigSchema = It;
exports.TogetherAI = q;
exports.TogetherAIChatModelConfigs = Ee;
exports.TogetherAIEmbeddingModelModalities = qt;
exports.TogetherAIEmbeddingModelModalitiesEnum = kt;
exports.TogetherAIEmbeddingRequest = Nt;
exports.TogetherAIEmbeddingRequestInput = yn;
exports.TogetherAIGetEmbeddingsResponse = Ot;
exports.frequencyPenalty = ue;
exports.logProbs = ye;
exports.maxTokens = le;
exports.minP = ce;
exports.presencePenalty = he;
exports.repetitionPenalty = ge;
exports.responseFormat = be;
exports.responseSchema = Ce;
exports.seed = fe;
exports.stop = me;
exports.temperature = ie;
exports.toolChoice = Te;
exports.topK = de;
exports.topP = pe;
//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map