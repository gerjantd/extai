import { z as z$1 } from 'zod';
import { RangeConfigItem, CHAT_CONFIG, SelectStringConfigItem, ObjectSchemaConfigItem, ChatModelSchema, EmbeddingModelSchema, MultiStringConfigItem, EMBEDDING_CONFIG, ProviderError, urlWithoutTrailingSlash, InvalidModelRequestError, removeUndefinedEntries, InvalidMessagesError, InvalidConfigError, InvalidToolsError, ModelResponseError, InvalidEmbeddingRequestsError } from '@adaline/provider';
import { SystemRoleLiteral, UserRoleLiteral, AssistantRoleLiteral, ToolRoleLiteral, TextModalityLiteral, ImageModalityLiteral, ToolCallModalityLiteral, ToolResponseModalityLiteral, EmbeddingTextModalityLiteral, Config, Base64ImageContentTypeLiteral, Message, Tool, createTextContent, createToolCallContent, EmbeddingRequests, FloatEmbeddingLiteral, createPartialTextMessage, createPartialToolCallMessage } from '@adaline/types';

var ct=Object.defineProperty;var Go=Object.getOwnPropertySymbols;var ht=Object.prototype.hasOwnProperty,ft=Object.prototype.propertyIsEnumerable;var gt=(i,e)=>(e=Symbol[i])?e:Symbol.for("Symbol."+i);var bo=(i,e,o)=>e in i?ct(i,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):i[e]=o,_=(i,e)=>{for(var o in e||(e={}))ht.call(e,o)&&bo(i,o,e[o]);if(Go)for(var o of Go(e))ft.call(e,o)&&bo(i,o,e[o]);return i};var x=(i,e,o)=>new Promise((t,s)=>{var l=r=>{try{m(o.next(r));}catch(p){s(p);}},n=r=>{try{m(o.throw(r));}catch(p){s(p);}},m=r=>r.done?t(r.value):Promise.resolve(r.value).then(l,n);m((o=o.apply(i,e)).next());}),ut=function(i,e){this[0]=i,this[1]=e;},_o=(i,e,o)=>{var t=(n,m,r,p)=>{try{var h=o[n](m),C=(m=h.value)instanceof ut,b=h.done;Promise.resolve(C?m[0]:m).then(y=>C?t(n==="return"?n:"next",m[1]?{done:y.done,value:y.value}:y,r,p):r({value:y,done:b})).catch(y=>t("throw",y,r,p));}catch(y){p(y);}},s=n=>l[n]=m=>new Promise((r,p)=>t(n,m,r,p)),l={};return o=o.apply(i,e),l[gt("asyncIterator")]=()=>l,s("next"),s("throw"),s("return"),l};var v=(i,e)=>RangeConfigItem({param:"temperature",title:CHAT_CONFIG.TEMPERATURE.title,description:CHAT_CONFIG.TEMPERATURE.description,min:0,max:i,step:.01,default:e}),N=i=>RangeConfigItem({param:"maxOutputTokens",title:CHAT_CONFIG.MAX_TOKENS.title,description:CHAT_CONFIG.MAX_TOKENS.description,min:0,max:i,step:1,default:0}),F=i=>MultiStringConfigItem({param:"stopSequences",title:CHAT_CONFIG.STOP(i).title,description:CHAT_CONFIG.STOP(i).description,max:i}),q=i=>RangeConfigItem({param:"topP",title:CHAT_CONFIG.TOP_P.title,description:CHAT_CONFIG.TOP_P.description,min:0,max:1,step:.01,default:i}),we=i=>RangeConfigItem({param:"topK",title:CHAT_CONFIG.TOP_K.title,description:CHAT_CONFIG.TOP_K.description,min:1,max:40,step:1,default:i}),Ie=RangeConfigItem({param:"frequencyPenalty",title:CHAT_CONFIG.FREQUENCY_PENALTY.title,description:CHAT_CONFIG.FREQUENCY_PENALTY.description,min:-2,max:2,step:.01,default:0}),Le=RangeConfigItem({param:"presencePenalty",title:CHAT_CONFIG.PRESENCE_PENALTY.title,description:CHAT_CONFIG.PRESENCE_PENALTY.description,min:-2,max:2,step:.01,default:0}),ke=RangeConfigItem({param:"seed",title:CHAT_CONFIG.SEED.title,description:CHAT_CONFIG.SEED.description,min:0,max:1e6,step:1,default:0}),$=SelectStringConfigItem({param:"toolChoice",title:"Tool choice",description:"Controls which (if any) tool is called by the model. 'none' means the model will not call a function. 'auto' means the model can pick between generating a message or calling a tool.",default:"auto",choices:["auto","any","none"]}),z=ObjectSchemaConfigItem({param:"safetySettings",title:"Safety settings",description:"The safety rating contains the category of harm and the harm probability level in that category for a piece of content.",objectSchema:z$1.array(z$1.object({threshold:z$1.enum(["HARM_BLOCK_THRESHOLD_UNSPECIFIED","BLOCK_LOW_AND_ABOVE","BLOCK_MEDIUM_AND_ABOVE","BLOCK_ONLY_HIGH","BLOCK_NONE","OFF"]),category:z$1.enum(["HARM_CATEGORY_UNSPECIFIED","HARM_CATEGORY_HARASSMENT","HARM_CATEGORY_HATE_SPEECH","HARM_CATEGORY_SEXUALLY_EXPLICIT","HARM_CATEGORY_DANGEROUS_CONTENT","HARM_CATEGORY_CIVIC_INTEGRITY"])}))});var Eo=(i,e,o,t,s)=>z$1.object({temperature:v(i,e).schema,maxTokens:N(o).schema,stop:F(t).schema,topP:q(s).schema,toolChoice:$.schema,safetySettings:z.schema}),Oo=(i,e,o,t,s)=>({temperature:v(i,e).def,maxTokens:N(o).def,stop:F(t).def,topP:q(s).def,toolChoice:$.def,safetySettings:z.def});var Po=(i,e,o,t,s,l)=>z$1.object({temperature:v(i,e).schema,maxTokens:N(o).schema,stop:F(t).schema,topP:q(s).schema,topK:we(l).schema,frequencyPenalty:Ie.schema,presencePenalty:Le.schema,seed:ke.schema.transform(n=>n===0?void 0:n),toolChoice:$.schema,safetySettings:z.schema}),So=(i,e,o,t,s,l)=>({temperature:v(i,e).def,maxTokens:N(o).def,stop:F(t).def,topP:q(s).def,topK:we(l).def,frequencyPenalty:Ie.def,presencePenalty:Le.def,seed:ke.def,toolChoice:$.def,safetySettings:z.def});var ve=i=>RangeConfigItem({param:"outputDimensionality",title:EMBEDDING_CONFIG.DIMENSIONS.title,description:EMBEDDING_CONFIG.DIMENSIONS.description,min:1,max:i,step:1,default:i});var Ro=i=>z$1.object({dimensions:ve(i).schema}),wo=i=>({dimensions:ve(i).def});var c={base:(i,e,o,t,s)=>({def:Oo(i,e,o,t,s),schema:Eo(i,e,o,t,s)}),c1:(i,e,o,t,s,l)=>({def:So(i,e,o,t,s,l),schema:Po(i,e,o,t,s,l)})},B={base:i=>({def:wo(i),schema:Ro(i)})};var Et="google",Y=class{constructor(){this.version="v1";this.name=Et;this.chatModelFactories={[mo]:{model:ye,modelOptions:Ho,modelSchema:po},[ro]:{model:ue,modelOptions:Vo,modelSchema:lo},[Ue]:{model:re,modelOptions:Fo,modelSchema:Ae},[Ve]:{model:le,modelOptions:qo,modelSchema:He},[Ke]:{model:me,modelOptions:$o,modelSchema:Ye},[Je]:{model:de,modelOptions:zo,modelSchema:We},[Xe]:{model:pe,modelOptions:Bo,modelSchema:Qe},[Ze]:{model:ce,modelOptions:jo,modelSchema:eo},[oo]:{model:he,modelOptions:Do,modelSchema:to},[so]:{model:fe,modelOptions:Uo,modelSchema:no},[je]:{model:ae,modelOptions:No,modelSchema:De},[ze]:{model:ie,modelOptions:vo,modelSchema:Be},[qe]:{model:ne,modelOptions:ko,modelSchema:$e},[Ne]:{model:se,modelOptions:Lo,modelSchema:Fe},[io]:{model:ge,modelOptions:Ao,modelSchema:ao}};this.embeddingModelFactories={[co]:{model:Ce,modelOptions:Ko,modelSchema:ho},[fo]:{model:Te,modelOptions:Yo,modelSchema:go}};}chatModelLiterals(){return Object.keys(this.chatModelFactories)}chatModelSchemas(){return Object.keys(this.chatModelFactories).reduce((e,o)=>(e[o]=this.chatModelFactories[o].modelSchema,e),{})}chatModel(e){let o=e.modelName;if(!(o in this.chatModelFactories))throw new ProviderError({info:`Google chat model: ${o} not found`,cause:new Error(`Google chat model: ${o} not found, available chat models: 
          [${this.chatModelLiterals().join(", ")}]`)});let t=this.chatModelFactories[o].model,s=this.chatModelFactories[o].modelOptions.parse(e);return new t(s)}embeddingModelLiterals(){return Object.keys(this.embeddingModelFactories)}embeddingModelSchemas(){return Object.keys(this.embeddingModelFactories).reduce((e,o)=>(e[o]=this.embeddingModelFactories[o].modelSchema,e),{})}embeddingModel(e){let o=e.modelName;if(!(o in this.embeddingModelFactories))throw new ProviderError({info:`Google embedding model: ${o} not found`,cause:new Error(`Google embedding model: ${o} not found, available embedding models: 
          [${this.embeddingModelLiterals().join(", ")}]`)});let t=this.embeddingModelFactories[o].model,s=this.embeddingModelFactories[o].modelOptions.parse(e);return new t(s)}};Y.baseUrl="https://generativelanguage.googleapis.com/v1beta";var g=z$1.enum([SystemRoleLiteral,UserRoleLiteral,AssistantRoleLiteral,ToolRoleLiteral]),Rt="model",wt="function",u={system:UserRoleLiteral,user:UserRoleLiteral,assistant:Rt,tool:wt};var M=[TextModalityLiteral,ImageModalityLiteral,ToolCallModalityLiteral,ToolResponseModalityLiteral],G=z$1.enum([TextModalityLiteral,ImageModalityLiteral,ToolCallModalityLiteral,ToolResponseModalityLiteral]),un=[TextModalityLiteral],yn=z$1.enum([TextModalityLiteral]),Ee=[TextModalityLiteral,ImageModalityLiteral],Oe=z$1.enum([TextModalityLiteral,ImageModalityLiteral]),I=[TextModalityLiteral,ToolCallModalityLiteral,ToolResponseModalityLiteral],L=z$1.enum([TextModalityLiteral,ToolCallModalityLiteral,ToolResponseModalityLiteral]);var It=z$1.object({text:z$1.string()}),Lt=z$1.object({functionCall:z$1.object({name:z$1.string(),args:z$1.record(z$1.any())})}),Jo=z$1.object({candidates:z$1.array(z$1.object({content:z$1.object({role:z$1.string(),parts:z$1.array(z$1.union([It,Lt]))}).optional(),finishReason:z$1.string(),index:z$1.number().optional(),safetyRatings:z$1.optional(z$1.array(z$1.object({category:z$1.string(),probability:z$1.string(),blocked:z$1.boolean().optional()})))})),promptFeedback:z$1.optional(z$1.object({safetyRatings:z$1.optional(z$1.array(z$1.object({category:z$1.string(),probability:z$1.string()})))})),usageMetadata:z$1.object({promptTokenCount:z$1.number(),cachedContentTokenCount:z$1.number().optional(),candidatesTokenCount:z$1.number().optional(),totalTokenCount:z$1.number()}).optional()}),kt=z$1.object({text:z$1.string()}),vt=z$1.object({functionCall:z$1.object({name:z$1.string(),args:z$1.record(z$1.any())})}),Wo=z$1.object({candidates:z$1.array(z$1.object({content:z$1.object({role:z$1.string(),parts:z$1.array(z$1.union([kt,vt]))}).optional(),finishReason:z$1.string().optional(),index:z$1.number().optional(),safetyRatings:z$1.optional(z$1.array(z$1.object({category:z$1.string(),probability:z$1.string(),blocked:z$1.boolean().optional()})))})),promptFeedback:z$1.optional(z$1.object({safetyRatings:z$1.optional(z$1.array(z$1.object({category:z$1.string(),probability:z$1.string()})))})),usageMetadata:z$1.object({promptTokenCount:z$1.number(),cachedContentTokenCount:z$1.number().optional(),candidatesTokenCount:z$1.number(),totalTokenCount:z$1.number()}).optional()});var ot=z$1.object({text:z$1.string().min(1)}),Nt=z$1.object({inline_data:z$1.object({mime_type:z$1.string().min(1),data:z$1.string().base64()})}),Ft=z$1.object({function_call:z$1.object({name:z$1.string().min(1),args:z$1.record(z$1.string().min(1))})}),qt=z$1.object({function_response:z$1.object({name:z$1.string().min(1),response:z$1.record(z$1.string().min(1))})}),$t=z$1.object({role:z$1.enum(["user","model","function"]),parts:z$1.array(z$1.union([ot,Nt,Ft,qt]))}),Xo=z$1.object({parts:z$1.array(ot)}),zt=z$1.object({name:z$1.string().min(1),description:z$1.string().min(1),parameters:z$1.any()}),Qo=z$1.object({function_calling_config:z$1.object({mode:z$1.enum(["ANY","AUTO","NONE"]),allowed_function_names:z$1.array(z$1.string()).optional()})}),Zo=z$1.object({stopSequences:z$1.array(z$1.string()).optional(),maxOutputTokens:z$1.number().optional(),temperature:z$1.number().optional(),topP:z$1.number().optional(),topK:z$1.number().optional(),presencePenalty:z$1.number().optional(),frequencyPenalty:z$1.number().optional(),seed:z$1.number().optional()}),et=z$1.object({category:z$1.enum(["HARM_CATEGORY_HARASSMENT","HARM_CATEGORY_HATE_SPEECH","HARM_CATEGORY_SEXUALLY_EXPLICIT","HARM_CATEGORY_DANGEROUS_CONTENT","HARM_CATEGORY_CIVIC_INTEGRITY"]),threshold:z$1.enum(["HARM_BLOCK_THRESHOLD_UNSPECIFIED","BLOCK_LOW_AND_ABOVE","BLOCK_MEDIUM_AND_ABOVE","BLOCK_ONLY_HIGH","BLOCK_NONE","OFF"])}),tt=z$1.object({model:z$1.string().min(1).optional(),contents:z$1.array($t),systemInstruction:Xo.optional(),system_instruction:Xo.optional(),generationConfig:Zo.optional(),generation_config:Zo.optional(),safetySettings:z$1.array(et).optional(),safety_settings:z$1.array(et).optional(),tools:z$1.object({function_declarations:z$1.array(zt)}).optional(),toolConfig:Qo.optional(),tool_config:Qo.optional()});var f=z$1.object({modelName:z$1.string(),apiKey:z$1.string(),baseUrl:z$1.string().url().optional(),completeChatUrl:z$1.string().url().optional(),streamChatUrl:z$1.string().url().optional()}),T=class{constructor(e,o){this.version="v1";var s;let t=f.parse(o);this.modelSchema=e,this.modelName=t.modelName,this.apiKey=t.apiKey,this.baseUrl=urlWithoutTrailingSlash((s=t.baseUrl)!=null?s:Y.baseUrl),this.completeChatUrl=urlWithoutTrailingSlash(t.completeChatUrl||`${this.baseUrl}/models/${this.modelName}:generateContent?key=${this.apiKey}`),this.streamChatUrl=urlWithoutTrailingSlash(t.streamChatUrl||`${this.baseUrl}/models/${this.modelName}:streamGenerateContent?key=${this.apiKey}`);}getDefaultBaseUrl(){return this.baseUrl}getDefaultHeaders(){return {"Content-Type":"application/json"}}getDefaultParams(){return {}}getRetryDelay(e){return {shouldRetry:!1,delayMs:0}}getTokenCount(e){return e.reduce((o,t)=>o+t.content.map(s=>s.modality==="text"?s.value:"").join(" ").length,0)}transformModelRequest(e){let o=tt.safeParse(e);if(!o.success)throw new InvalidModelRequestError({info:"Invalid model request",cause:o.error});let t=o.data,s=t.model;if(t.system_instruction&&t.systemInstruction)throw new InvalidModelRequestError({info:`Invalid model request for model : '${this.modelName}'`,cause:new Error("'system_instruction' and 'systemInstruction' are not allowed at the same time")});if(t.generation_config&&t.generationConfig)throw new InvalidModelRequestError({info:`Invalid model request for model : '${this.modelName}'`,cause:new Error("'generation_config' and 'generationConfig' are not allowed at the same time")});if(t.tool_config&&t.toolConfig)throw new InvalidModelRequestError({info:`Invalid model request for model : '${this.modelName}'`,cause:new Error("'tool_config' and 'toolConfig' are not allowed at the same time")});let l=t.system_instruction||t.systemInstruction,n=t.generation_config||t.generationConfig,m=t.safety_settings||t.safetySettings,r=t.tool_config||t.toolConfig;if(r&&(!t.tools||t.tools.function_declarations.length===0))throw new InvalidModelRequestError({info:`Invalid model request for model : '${this.modelName}'`,cause:new Error("'tools' are required when 'tool_choice' is specified")});let p={};r&&(r.function_calling_config.mode==="ANY"&&r.function_calling_config.allowed_function_names&&r.function_calling_config.allowed_function_names.length===1?p.toolChoice=r.function_calling_config.allowed_function_names[0]:p.toolChoice=r.function_calling_config.mode.toLowerCase()),p.seed=n==null?void 0:n.seed,p.maxTokens=n==null?void 0:n.maxOutputTokens,p.temperature=n==null?void 0:n.temperature,p.topP=n==null?void 0:n.topP,p.presencePenalty=n==null?void 0:n.presencePenalty,p.frequencyPenalty=n==null?void 0:n.frequencyPenalty,p.stop=n==null?void 0:n.stopSequences,p.safetySettings=m;let h=Config().parse(removeUndefinedEntries(p)),C=[];l&&l.parts.forEach(y=>{C.push({role:SystemRoleLiteral,content:[{modality:TextModalityLiteral,value:y.text}]});}),t.contents.forEach(y=>{let V=y.role;switch(V){case"user":{let H=y.parts.map(S=>"text"in S?{modality:TextModalityLiteral,value:S.text}:{modality:ImageModalityLiteral,detail:"auto",value:{type:Base64ImageContentTypeLiteral,base64:S.inline_data.data,media_type:S.inline_data.mime_type.split("/")[1]}});C.push({role:V,content:H});}break;case"model":{let H=y.parts.map((S,K)=>"text"in S?{modality:TextModalityLiteral,value:S.text}:{modality:ToolCallModalityLiteral,id:K.toString(),index:K,name:S.function_call.name,arguments:JSON.stringify(S.function_call.args)});C.push({role:AssistantRoleLiteral,content:H});}break;case"function":{let H=y.parts.map((S,K)=>({modality:ToolResponseModalityLiteral,id:K.toString(),index:K,name:S.function_response.name,data:JSON.stringify(S.function_response.response)}));C.push({role:ToolRoleLiteral,content:H});}break;default:throw new InvalidMessagesError({info:`Invalid message 'role' for model : ${this.modelName}`,cause:new Error(`role : '${y.role}' is not supported for model : ${this.modelName}`)})}});let b=[];return t.tools&&t.tools.function_declarations.forEach(y=>{b.push({type:"function",definition:{schema:{name:y.name,description:y.description,parameters:y.parameters}}});}),{modelName:s,config:h,messages:C,tools:b.length>0?b:void 0}}transformConfig(e,o,t){let s=e.toolChoice;delete e.toolChoice;let l=this.modelSchema.config.schema.safeParse(e);if(!l.success)throw new InvalidConfigError({info:`Invalid config for model : '${this.modelName}'`,cause:l.error});let n=l.data;Object.keys(n).forEach(h=>{if(!(h in this.modelSchema.config.def))throw new InvalidConfigError({info:`Invalid config for model : '${this.modelName}'`,cause:new Error(`Invalid config key : '${h}', 
            available keys : [${Object.keys(this.modelSchema.config.def).join(", ")}]`)})});let m=Object.keys(n).reduce((h,C)=>{let b=this.modelSchema.config.def[C],y=b.param,V=n[C];return y==="maxOutputTokens"&&b.type==="range"&&V===0?h[y]=b.max:h[y]=V,h},{}),r=m.safetySettings;delete m.safetySettings;let p;if(s!==void 0){let h=s;if(!t||t&&t.length===0)throw new InvalidConfigError({info:`Invalid config for model : '${this.modelName}'`,cause:new Error("'tools' are required when 'toolChoice' is specified")});if(t&&t.length>0){let C=this.modelSchema.config.def.toolChoice;if(C.choices.includes(h))h==="any"?p={function_calling_config:{mode:"ANY",allowed_function_names:t.map(b=>b.definition.schema.name)}}:p={function_calling_config:{mode:h.toUpperCase()}};else if(t.map(b=>b.definition.schema.name).includes(h))p={function_calling_config:{mode:"ANY",allowed_function_names:[h]}};else throw new InvalidConfigError({info:`Invalid config for model : '${this.modelName}'`,cause:new Error(`toolChoice : '${h}' is not part of provided 'tools' names or 
                one of [${C.choices.join(", ")}]`)})}}return _(_({generation_config:m},p?{tool_config:p}:{}),r?{safety_settings:r}:{})}transformMessages(e){if(!e||e&&e.length===0)return {messages:[]};let o=e.map(n=>{let m=Message().safeParse(n);if(!m.success)throw new InvalidMessagesError({info:"Invalid messages",cause:m.error});return m.data});o.forEach(n=>{n.content.forEach(m=>{if(!this.modelSchema.modalities.includes(m.modality))throw new InvalidMessagesError({info:`Invalid message content for model : '${this.modelName}'`,cause:new Error(`model : '${this.modelName}' does not support modality : '${m.modality}', 
              available modalities : [${this.modelSchema.modalities.join(", ")}]`)})});}),o.forEach(n=>{if(!Object.keys(this.modelSchema.roles).includes(n.role))throw new InvalidMessagesError({info:`Invalid message content for model : '${this.modelName}'`,cause:new Error(`model : '${this.modelName}' does not support role : '${n.role}', 
            available roles : [${Object.keys(this.modelSchema.roles).join(", ")}]`)})});let t={parts:[]},s=[];if(o.forEach(n=>{switch(n.role){case SystemRoleLiteral:n.content.forEach(m=>{if(m.modality===TextModalityLiteral)t.parts.push({text:m.value});else throw new InvalidMessagesError({info:`Invalid message 'role' and 'modality' combination for model : ${this.modelName}`,cause:new Error(`role : '${n.role}' cannot have content with modality : '${m.modality}'`)})});break;case AssistantRoleLiteral:{let m=[];n.content.forEach(r=>{if(r.modality===TextModalityLiteral)m.push({text:r.value});else if(r.modality===ToolCallModalityLiteral)m.push({function_call:{name:r.name,args:JSON.parse(r.arguments)}});else throw new InvalidMessagesError({info:`Invalid message 'role' and 'modality' combination for model : ${this.modelName}`,cause:new Error(`role : '${n.role}' cannot have content with modality : '${r.modality}'`)})}),s.push({role:this.modelSchema.roles[n.role],parts:m});}break;case UserRoleLiteral:{let m=[];n.content.forEach(r=>{if(r.modality===TextModalityLiteral)m.push({text:r.value});else if(r.modality===ImageModalityLiteral){if(r.value.type==="base64")m.push({inline_data:{mime_type:r.value.media_type,data:r.value.base64}});else if(r.value.type==="url")throw new InvalidMessagesError({info:`Invalid message 'modality' for model : ${this.modelName}`,cause:new Error(`model: '${this.modelName}' does not support image content type: '${r.value.type}'`)})}else throw new InvalidMessagesError({info:`Invalid message 'role' and 'modality' combination for model : ${this.modelName}`,cause:new Error(`role : '${n.role}' cannot have content with modality : '${r.modality}'`)})}),s.push({role:this.modelSchema.roles[n.role],parts:m});}break;case ToolRoleLiteral:{let m=[];n.content.forEach(r=>{if(r.modality===ToolResponseModalityLiteral)m.push({function_response:{name:r.name,response:JSON.parse(r.data)}});else throw new InvalidMessagesError({info:`Invalid message 'role' and 'modality' combination for model : ${this.modelName}`,cause:new Error(`role : '${n.role}' cannot have content with modality : '${r.modality}'`)})}),s.push({role:this.modelSchema.roles[n.role],parts:m});}break;default:throw new InvalidMessagesError({info:`Invalid message 'role' for model : ${this.modelName}`,cause:new Error(`role : '${n.role}' is not supported, 
              available roles : [${Object.keys(this.modelSchema.roles).join(", ")}]`)})}}),s[0].role!==this.modelSchema.roles[UserRoleLiteral])throw new InvalidMessagesError({info:`Invalid message 'role' for model : ${this.modelName}`,cause:new Error(`model : '${this.modelName}' requires first message to be from user`)});let l=n=>n===this.modelSchema.roles[UserRoleLiteral]||n===this.modelSchema.roles[ToolRoleLiteral]?[this.modelSchema.roles[AssistantRoleLiteral]]:[this.modelSchema.roles[UserRoleLiteral],this.modelSchema.roles[ToolRoleLiteral]];for(let n=1;n<s.length;n++)if(!l(s[n-1].role).includes(s[n].role))throw new InvalidMessagesError({info:`Invalid message format for model : ${this.modelName}`,cause:new Error(`model : '${this.modelName}' cannot have message with role : '${s[n].role}' after message with role : '${s[n-1].role}'`)});if(s[s.length-1].role!==this.modelSchema.roles[UserRoleLiteral]&&s[s.length-1].role!==this.modelSchema.roles[ToolRoleLiteral])throw new InvalidMessagesError({info:`Invalid message format for model : ${this.modelName}`,cause:new Error(`model : '${this.modelName}' requires last message to be from user`)});return _({contents:s},t.parts.length>0?{system_instruction:t}:{})}transformTools(e){if(!this.modelSchema.modalities.includes(ToolCallModalityLiteral))throw new InvalidToolsError({info:`Invalid tool 'modality' for model : ${this.modelName}`,cause:new Error(`model : '${this.modelName}' does not support tool modality : '${ToolCallModalityLiteral}'`)});return !e||e&&e.length===0?{tools:[]}:{tools:[{function_declarations:e.map(s=>{let l=Tool().safeParse(s);if(!l.success)throw new InvalidToolsError({info:"Invalid tools",cause:l.error});return l.data}).map(s=>({name:s.definition.schema.name,description:s.definition.schema.description,parameters:s.definition.schema.parameters}))}]}}getCompleteChatUrl(e,o,t){return x(this,null,function*(){return new Promise(s=>{s(this.completeChatUrl);})})}getCompleteChatHeaders(e,o,t){return x(this,null,function*(){return new Promise(s=>{s(this.getDefaultHeaders());})})}getCompleteChatData(e,o,t){return x(this,null,function*(){let s=this.transformConfig(e,o,t),l=this.transformMessages(o);if(l.messages&&l.messages.length===0)throw new InvalidMessagesError({info:"Messages are required",cause:new Error("Messages are required")});let n=t?this.transformTools(t):{};return new Promise(m=>{m(_(_(_(_({},this.getDefaultParams()),s),l),n));})})}transformCompleteChatResponse(e){let o=Jo.safeParse(e);if(o.success){if(o.data.candidates.length===0)throw new ModelResponseError({info:"Invalid response from model",cause:new Error(`No choices in response : ${JSON.stringify(o.data)}`)});let t=o.data,s=[],l,n=t.candidates[0].content;if(n){let p=n.parts.map((h,C)=>{if("text"in h&&h.text!==void 0)return createTextContent(h.text);if("functionCall"in h&&h.functionCall!==void 0)return createToolCallContent(C,`${h.functionCall.name}_${C}`,h.functionCall.name,JSON.stringify(h.functionCall.args))});return s.push({role:AssistantRoleLiteral,content:p}),t.usageMetadata&&(l={promptTokens:t.usageMetadata.promptTokenCount,totalTokens:t.usageMetadata.totalTokenCount,completionTokens:t.usageMetadata.candidatesTokenCount||0}),{messages:s,usage:l,logProbs:void 0}}let m=t.candidates[0].safetyRatings;if(m&&m.length>0&&m.forEach(p=>{if(p.blocked)throw new ModelResponseError({info:`Blocked content for category: ${p.category} with probability: ${p.probability}`,cause:new Error(`Blocked content for category: ${p.category} with probability: ${p.probability}`)})}),t.candidates[0].finishReason==="SAFETY")throw new ModelResponseError({info:"Blocked content, model response finished with safety reason",cause:new Error("Blocked content, model response finished with safety reason")})}throw new ModelResponseError({info:"Invalid response from model",cause:o.error})}getStreamChatUrl(e,o,t){return x(this,null,function*(){return new Promise(s=>{s(this.streamChatUrl);})})}getStreamChatHeaders(e,o,t){return x(this,null,function*(){return new Promise(s=>{s(this.getDefaultHeaders());})})}getStreamChatData(e,o,t){return x(this,null,function*(){let s=this.transformConfig(e,o,t),l=this.transformMessages(o);if(l.messages&&l.messages.length===0)throw new InvalidMessagesError({info:"Messages are required",cause:new Error("Messages are required")});let n=t?this.transformTools(t):{};return new Promise(m=>{m(_(_(_(_({},this.getDefaultParams()),s),l),n));})})}transformStreamChatResponseChunk(e,o){return _o(this,null,function*(){let t=(o+e).split(",\r").filter(s=>s.trim()!=="");for(let s of t){let l=s;if(l=l.replace(/\n/g,""),l.startsWith("["))l=l.slice(1);else if(l.endsWith("]")){if(l==="]")return;l=l.slice(0,-1);}let n;try{n=JSON.parse(l);}catch(r){if(r instanceof SyntaxError){o=l;continue}else throw r}o="";let m=Wo.safeParse(n);if(m.success){let r={partialMessages:[]},p=m.data;if(p.candidates.length>0){let h=p.candidates[0].content;h&&"parts"in h&&h.parts.length>0&&h.parts.forEach((C,b)=>{if("text"in C&&C.text!==void 0&&r.partialMessages.push(createPartialTextMessage(AssistantRoleLiteral,C.text)),"functionCall"in C&&C.functionCall!==void 0){let y=C.functionCall;r.partialMessages.push(createPartialToolCallMessage(AssistantRoleLiteral,b,`${y.name}_${b}`,y.name,JSON.stringify(y.args)));}});}p.usageMetadata&&(r.usage={promptTokens:p.usageMetadata.promptTokenCount,completionTokens:p.usageMetadata.candidatesTokenCount,totalTokens:p.usageMetadata.totalTokenCount}),yield {partialResponse:r,buffer:o};}else throw new ModelResponseError({info:"Invalid response from model",cause:m.error})}yield {partialResponse:{partialMessages:[]},buffer:o};})}};var P=class extends T{transformMessages(e){let o=super.transformMessages(e);if(o.systemInstruction){let t={role:this.modelSchema.roles[UserRoleLiteral],parts:o.systemInstruction.parts};o.contents.unshift(t),delete o.systemInstruction;}return o}};var Ne="gemini-1.0-pro-001",Xt="Google's predecessor to Gemini 1.5 Pro, a model for scaling across a wide range of tasks   Optimized for natural language tasks, multi-turn text and code chat, and code generation",Fe=ChatModelSchema(g,L).parse({name:Ne,description:Xt,maxInputTokens:30720,maxOutputTokens:2048,roles:u,modalities:I,config:{def:c.base(1,.9,2048,4,1).def,schema:c.base(1,.9,2048,4,1).schema}}),Lo=f,se=class extends P{constructor(e){super(Fe,e);}};var qe="gemini-1.0-pro-latest",Zt="Google's latest multimodal model with great performance for high-frequency tasks.   Optimized for natural language tasks, multi-turn text and code chat, and code generation",$e=ChatModelSchema(g,L).parse({name:qe,description:Zt,maxInputTokens:30720,maxOutputTokens:2048,roles:u,modalities:I,config:{def:c.base(1,.9,2048,4,1).def,schema:c.base(1,.9,2048,4,1).schema}}),ko=f,ne=class extends P{constructor(e){super($e,e);}};var ze="gemini-1.0-pro-vision",os="Google's predecessor to Gemini 1.5 Pro, an image understanding model to handle a broad range of applications",Be=ChatModelSchema(g,Oe).parse({name:ze,description:os,maxInputTokens:12288,maxOutputTokens:4096,roles:u,modalities:Ee,config:{def:c.c1(1,.4,4096,4,1,32).def,schema:c.c1(1,.4,4096,4,1,32).schema}}),vo=f,ie=class extends P{constructor(e){super(Be,e);}};var je="gemini-1.0-pro",ss="Google's predecessor to Gemini 1.5 Pro, a model for scaling across a wide range of tasks   Optimized for natural language tasks, multi-turn text and code chat, and code generation",De=ChatModelSchema(g,L).parse({name:je,description:ss,maxInputTokens:30720,maxOutputTokens:2048,roles:u,modalities:I,config:{def:c.base(1,.9,2048,4,1).def,schema:c.base(1,.9,2048,4,1).schema}}),No=f,ae=class extends P{constructor(e){super(De,e);}};var Ue="gemini-1.5-flash-001",is="Google's fastest, most cost-efficient multimodal model with great performance for high-frequency tasks.   Optimized for fast and versatile performance across a diverse variety of tasks",Ae=ChatModelSchema(g,G).parse({name:Ue,description:is,maxInputTokens:1e6,maxOutputTokens:8192,roles:u,modalities:M,config:{def:c.c1(2,1,8192,4,.95,64).def,schema:c.c1(2,1,8192,4,.95,64).schema}}),Fo=f,re=class extends T{constructor(e){super(Ae,e);}};var Ve="gemini-1.5-flash-002",rs="Google's fastest, most cost-efficient multimodal model with great performance for high-frequency tasks.   Optimized for fast and versatile performance across a diverse variety of tasks",He=ChatModelSchema(g,G).parse({name:Ve,description:rs,maxInputTokens:1e6,maxOutputTokens:8192,roles:u,modalities:M,config:{def:c.c1(2,1,8192,4,.95,40).def,schema:c.c1(2,1,8192,4,.95,40).schema}}),qo=f,le=class extends T{constructor(e){super(He,e);}};var Ke="gemini-1.5-flash-latest",ms="Google's latest multimodal model with great performance for high-frequency tasks.   Optimized for fast and versatile performance across a diverse variety of tasks",Ye=ChatModelSchema(g,G).parse({name:Ke,description:ms,maxInputTokens:1e6,maxOutputTokens:8192,roles:u,modalities:M,config:{def:c.c1(2,1,8192,4,.95,64).def,schema:c.c1(2,1,8192,4,.95,64).schema}}),$o=f,me=class extends T{constructor(e){super(Ye,e);}};var Je="gemini-1.5-flash",ps="Google's fastest, most cost-efficient multimodal model with great performance for high-frequency tasks.   Optimized for fast and versatile performance across a diverse variety of tasks",We=ChatModelSchema(g,G).parse({name:Je,description:ps,maxInputTokens:1e6,maxOutputTokens:8192,roles:u,modalities:M,config:{def:c.c1(2,1,8192,4,.95,64).def,schema:c.c1(2,1,8192,4,.95,64).schema}}),zo=f,de=class extends T{constructor(e){super(We,e);}};var Xe="gemini-1.5-pro-001",hs="Google's best performing multimodal model with features for a wide variety of reasoning tasks.   Optimized for complex reasoning tasks requiring more intelligence",Qe=ChatModelSchema(g,G).parse({name:Xe,description:hs,maxInputTokens:2e6,maxOutputTokens:8192,roles:u,modalities:M,config:{def:c.c1(2,1,8192,4,.95,64).def,schema:c.c1(2,1,8192,4,.95,64).schema}}),Bo=f,pe=class extends T{constructor(e){super(Qe,e);}};var Ze="gemini-1.5-pro-002",gs="Google's best performing multimodal model with features for a wide variety of reasoning tasks.   Optimized for complex reasoning tasks requiring more intelligence",eo=ChatModelSchema(g,G).parse({name:Ze,description:gs,maxInputTokens:2e6,maxOutputTokens:8192,roles:u,modalities:M,config:{def:c.c1(2,1,8192,4,.95,40).def,schema:c.c1(2,1,8192,4,.95,40).schema}}),jo=f,ce=class extends T{constructor(e){super(eo,e);}};var oo="gemini-1.5-pro-latest",ys="Google's best performing multimodal model with features for a wide variety of reasoning tasks.   Optimized for complex reasoning tasks requiring more intelligence",to=ChatModelSchema(g,G).parse({name:oo,description:ys,maxInputTokens:2e6,maxOutputTokens:8192,roles:u,modalities:M,config:{def:c.c1(2,1,8192,4,.95,64).def,schema:c.c1(2,1,8192,4,.95,64).schema}}),Do=f,he=class extends T{constructor(e){super(to,e);}};var so="gemini-1.5-pro",Ts="Google's best performing multimodal model with features for a wide variety of reasoning tasks.   Optimized for complex reasoning tasks requiring more intelligence",no=ChatModelSchema(g,G).parse({name:so,description:Ts,maxInputTokens:2e6,maxOutputTokens:8192,roles:u,modalities:M,config:{def:c.c1(2,1,8192,4,.95,64).def,schema:c.c1(2,1,8192,4,.95,64).schema}}),Uo=f,fe=class extends T{constructor(e){super(no,e);}};var io="gemini-2.0-flash-exp",Gs="Google's experimental multimodal model with enhanced capabilities.   Designed for cutting-edge performance across complex and high-frequency tasks.",ao=ChatModelSchema(g,G).parse({name:io,description:Gs,maxInputTokens:1e6,maxOutputTokens:8192,roles:u,modalities:M,config:{def:c.c1(2,1,8192,4,.95,64).def,schema:c.c1(2,1,8192,4,.95,64).schema}}),Ao=f,ge=class extends T{constructor(e){super(ao,e);}};var ro="gemini-pro-vision",_s="An image understanding model to handle a broad range of applications",lo=ChatModelSchema(g,Oe).parse({name:ro,description:_s,maxInputTokens:12288,maxOutputTokens:4096,roles:u,modalities:Ee,config:{def:c.c1(1,.4,4096,4,1,32).def,schema:c.c1(1,.4,4096,4,1,32).schema}}),Vo=f,ue=class extends P{constructor(e){super(lo,e);}};var mo="gemini-pro",Os="A model for scaling across a wide range of tasks   Optimized for natural language tasks, multi-turn text and code chat, and code generation",po=ChatModelSchema(g,L).parse({name:mo,description:Os,maxInputTokens:30720,maxOutputTokens:2048,roles:u,modalities:I,config:{def:c.base(1,.9,2048,4,1).def,schema:c.base(1,.9,2048,4,1).schema}}),Ho=f,ye=class extends P{constructor(e){super(po,e);}};var xe=[EmbeddingTextModalityLiteral],Re=z$1.enum([EmbeddingTextModalityLiteral]);var lt=z$1.object({embeddings:z$1.array(z$1.object({values:z$1.array(z$1.number())}))});var Ss=z$1.object({model:z$1.string().min(1),content:z$1.object({parts:z$1.array(z$1.object({text:z$1.string().min(1)})).min(1)})}),mt=z$1.object({model:z$1.string().min(1).optional(),requests:z$1.array(Ss).min(1),outputDimensionality:z$1.number().int().min(1).optional()});var oe=z$1.object({modelName:z$1.string(),apiKey:z$1.string(),baseUrl:z$1.string().url(),getEmbeddingsUrl:z$1.string().url().optional()}),A=class{constructor(e,o){this.version="v1";let t=oe.parse(o);this.modelSchema=e,this.modelName=t.modelName,this.apiKey=t.apiKey,this.baseUrl=urlWithoutTrailingSlash(t.baseUrl),this.getEmbeddingsUrl=urlWithoutTrailingSlash(t.getEmbeddingsUrl||`${this.baseUrl}/models/${this.modelName}:batchEmbedContents?key=${this.apiKey}`);}getDefaultBaseUrl(){return this.baseUrl}getDefaultHeaders(){return {"Content-Type":"application/json"}}getDefaultParams(){return {model:this.modelName}}getRetryDelay(e){return {shouldRetry:!1,delayMs:0}}getTokenCount(e){return e.requests.reduce((o,t)=>o+t.length,0)}transformModelRequest(e){let o=mt.safeParse(e);if(!o.success)throw new InvalidModelRequestError({info:"Invalid model request",cause:o.error});let t=o.data,s=t.model,l={outputDimensionality:t.outputDimensionality},n=Config().parse(removeUndefinedEntries(l)),m={modality:EmbeddingTextModalityLiteral,requests:t.requests.reduce((r,p)=>(r.push(...p.content.parts.map(h=>h.text)),r),[])};return {modelName:s,config:n,embeddingRequests:m}}transformConfig(e,o){let t=this.modelSchema.config.schema.safeParse(e);if(!t.success)throw new InvalidConfigError({info:`Invalid config for model : '${this.modelName}'`,cause:t.error});let s=t.data;return Object.keys(s).forEach(n=>{if(!this.modelSchema.config.def[n])throw new InvalidConfigError({info:`Invalid config for model : '${this.modelName}'`,cause:new Error(`Invalid config key : '${n}', 
            available keys : [${Object.keys(this.modelSchema.config.def).join(", ")}]`)})}),Object.keys(s).reduce((n,m)=>{let p=this.modelSchema.config.def[m].param,h=s[m];return n[p]=h,n},{})}transformEmbeddingRequests(e){let o=EmbeddingRequests().safeParse(e);if(!o.success)throw new InvalidEmbeddingRequestsError({info:"Invalid embedding requests",cause:o.error});if(e.modality!==EmbeddingTextModalityLiteral)throw new InvalidEmbeddingRequestsError({info:`Invalid embedding requests for model : '${this.modelName}'`,cause:new Error(`Only '${EmbeddingTextModalityLiteral}' modality is supported for model : '${this.modelName}'`)});return {requests:o.data.requests.map(s=>({model:`models/${this.modelName}`,content:{parts:[{text:s}]}}))}}getGetEmbeddingsUrl(e,o){return x(this,null,function*(){return new Promise(t=>{t(this.getEmbeddingsUrl);})})}getGetEmbeddingsHeaders(e,o){return x(this,null,function*(){return new Promise(t=>{t(this.getDefaultHeaders());})})}getGetEmbeddingsData(e,o){return x(this,null,function*(){return new Promise(t=>{let s=this.transformConfig(e),l=this.transformEmbeddingRequests(o);if(o.requests.length===0)throw new InvalidEmbeddingRequestsError({info:`Invalid embedding requests for model : '${this.modelName}'`,cause:new Error("requests cannot be empty")});s.outputDimensionality&&(l.requests.forEach(n=>{n.outputDimensionality=s.outputDimensionality;}),delete s.outputDimensionality),t(_(_(_({},this.getDefaultParams()),s),l));})})}transformGetEmbeddingsResponse(e){let o=lt.safeParse(e);if(o.success){let s=o.data.embeddings.map((l,n)=>({index:n,embedding:l.values}));return {encodingFormat:FloatEmbeddingLiteral,embeddings:s}}throw new ModelResponseError({info:"Invalid response from model",cause:o.error})}};var co="text-embedding-001",Ns="text-embedding-001",ho=EmbeddingModelSchema(Re).parse({name:co,description:Ns,modalities:xe,maxInputTokens:2048,maxOutputTokens:768,config:{def:B.base(768).def,schema:B.base(768).schema}}),Ko=oe,Ce=class extends A{constructor(e){super(ho,e);}};var fo="text-embedding-004",qs="text-embedding-004",go=EmbeddingModelSchema(Re).parse({name:fo,description:qs,modalities:xe,maxInputTokens:2048,maxOutputTokens:768,config:{def:B.base(768).def,schema:B.base(768).schema}}),Yo=oe,Te=class extends A{constructor(e){super(go,e);}};

export { T as BaseChatModel, P as BaseChatModelGemini1, f as BaseChatModelOptions, A as BaseEmbeddingModel, oe as BaseEmbeddingModelOptions, Oo as ChatModelBaseConfigDef, Eo as ChatModelBaseConfigSchema, So as ChatModelC1ConfigDef, Po as ChatModelC1ConfigSchema, wo as EmbeddingModelBaseConfigDef, Ro as EmbeddingModelBaseConfigSchema, ae as Gemini1_0Pro, ne as Gemini1_0ProLatest, qe as Gemini1_0ProLatestLiteral, ko as Gemini1_0ProLatestOptions, $e as Gemini1_0ProLatestSchema, je as Gemini1_0ProLiteral, No as Gemini1_0ProOptions, De as Gemini1_0ProSchema, ie as Gemini1_0ProVision, ze as Gemini1_0ProVisionLiteral, vo as Gemini1_0ProVisionOptions, Be as Gemini1_0ProVisionSchema, se as Gemini1_0Pro_001, Ne as Gemini1_0Pro_001Literal, Lo as Gemini1_0Pro_001Options, Fe as Gemini1_0Pro_001Schema, de as Gemini1_5Flash, re as Gemini1_5Flash001, Ue as Gemini1_5Flash001Literal, Fo as Gemini1_5Flash001Options, Ae as Gemini1_5Flash001Schema, le as Gemini1_5Flash002, Ve as Gemini1_5Flash002Literal, qo as Gemini1_5Flash002Options, He as Gemini1_5Flash002Schema, me as Gemini1_5FlashLatest, Ke as Gemini1_5FlashLatestLiteral, $o as Gemini1_5FlashLatestOptions, Ye as Gemini1_5FlashLatestSchema, Je as Gemini1_5FlashLiteral, zo as Gemini1_5FlashOptions, We as Gemini1_5FlashSchema, fe as Gemini1_5Pro, pe as Gemini1_5Pro001, Xe as Gemini1_5Pro001Literal, Bo as Gemini1_5Pro001Options, Qe as Gemini1_5Pro001Schema, ce as Gemini1_5Pro002, Ze as Gemini1_5Pro002Literal, jo as Gemini1_5Pro002Options, eo as Gemini1_5Pro002Schema, he as Gemini1_5ProLatest, oo as Gemini1_5ProLatestLiteral, Do as Gemini1_5ProLatestOptions, to as Gemini1_5ProLatestSchema, so as Gemini1_5ProLiteral, Uo as Gemini1_5ProOptions, no as Gemini1_5ProSchema, ge as Gemini2_0FlashExp, io as Gemini2_0FlashExpLiteral, Ao as Gemini2_0FlashExpOptions, ao as Gemini2_0FlashExpSchema, ye as GeminiPro, mo as GeminiProLiteral, Ho as GeminiProOptions, po as GeminiProSchema, ue as GeminiProVision, ro as GeminiProVisionLiteral, Vo as GeminiProVisionOptions, lo as GeminiProVisionSchema, Y as Google, Rt as GoogleChatAssistantRoleLiteral, $t as GoogleChatContent, Ft as GoogleChatContentPartFunctionCall, qt as GoogleChatContentPartFunctionResponse, Nt as GoogleChatContentPartInlineData, ot as GoogleChatContentPartText, Zo as GoogleChatGenerationConfig, c as GoogleChatModelConfigs, M as GoogleChatModelModalities, G as GoogleChatModelModalitiesEnum, g as GoogleChatModelRoles, u as GoogleChatModelRolesMap, un as GoogleChatModelTextModalities, yn as GoogleChatModelTextModalitiesEnum, I as GoogleChatModelTextToolModalities, L as GoogleChatModelTextToolModalitiesEnum, Ee as GoogleChatModelTextVisionModalities, Oe as GoogleChatModelTextVisionModalitiesEnum, tt as GoogleChatRequest, et as GoogleChatSafetySettings, Xo as GoogleChatSystemInstruction, zt as GoogleChatTool, Qo as GoogleChatToolConfig, wt as GoogleChatToolRoleLiteral, Jo as GoogleCompleteChatResponse, It as GoogleCompleteChatTextResponse, Lt as GoogleCompleteChatToolResponse, B as GoogleEmbeddingModelConfigs, xe as GoogleEmbeddingModelModalities, Re as GoogleEmbeddingModelModalitiesEnum, mt as GoogleEmbeddingRequest, Ss as GoogleEmbeddingRequestInput, lt as GoogleGetEmbeddingsResponse, Wo as GoogleStreamChatResponse, kt as GoogleStreamChatTextResponse, vt as GoogleStreamChatToolResponse, Et as ProviderLiteral, Ce as Text_Embedding_001, co as Text_Embedding_001Literal, Ko as Text_Embedding_001Options, ho as Text_Embedding_001Schema, Te as Text_Embedding_004, fo as Text_Embedding_004Literal, Yo as Text_Embedding_004Options, go as Text_Embedding_004Schema, ve as dimensions, Ie as frequencyPenalty, N as maxTokens, Le as presencePenalty, z as safetySettings, ke as seed, F as stop, v as temperature, $ as toolChoice, we as topK, q as topP };
//# sourceMappingURL=index.mjs.map
//# sourceMappingURL=index.mjs.map